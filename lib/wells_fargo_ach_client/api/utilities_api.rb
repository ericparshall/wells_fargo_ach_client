=begin
#Hello-WellsFargo  last updated 01/17/2019

#Utility API to get confirmation on certificate installation.

OpenAPI spec version: v1
Contact: gateway@wellsfargo.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'uri'

module WellsFargoAchClient
  class UtilitiesApi
    attr_accessor :api_client

    def initialize(validation_consumer_key, validation_consumer_secret, cert_file, key_file, key_password)
      @api_client = ApiClient.new(Configuration.with_ssl_cert_auth(cert_file, key_file, key_password)) # We want to ensure configuration for this client doesn't alter the default

      access_token = get_access_token(validation_consumer_key, validation_consumer_secret)

      @api_client.config.configure do |config|
        config.host = "api-certification.wellsfargo.com"
        config.base_path = "/utilities/v1"
        config.debugging = true
        config.api_key['Authorization'] = access_token
      end
    end

    def get_access_token(validation_consumer_key, validation_consumer_secret)
      url = URI("https://api.wellsfargo.com/token?grant_type=client_credentials")

      http = Net::HTTP.new(url.host, url.port)
      http.use_ssl = true

      request = Net::HTTP::Post.new(url)
puts "Basic #{Base64.strict_encode64("#{validation_consumer_key}:#{validation_consumer_secret}")}"
      request['Authorization'] = "Basic #{Base64.strict_encode64("#{validation_consumer_key}:#{validation_consumer_secret}")}"
      request['Content-Type'] = 'application/x-www-form-urlencoded'
      request['Content-Length'] = 0

      response = http.request(request)

      if (200..299).include?(response.code.to_i)
        parsed_response = JSON.parse response.body

        return parsed_response["access_token"]
      else
        raise "Failed to retrieve access token: #{response.body}"
      end
    end

    # Provides the ability for customers to validate their certificate installation.
    # @param gateway_company_id Required. Channel Id of WF customer that request is on behalf of. Will be used for authorization and billing. Length must be 10
    # @param request_id Required. Identifier of API request message instance, to provide tracking. Length must be between 1 and 36
    # @param [Hash] opts the optional parameters
    # @return [HelloWellsfargoResponseDEF]
    def hello_wellsfargo_get(gateway_company_id, request_id, opts = {})
      data, _status_code, _headers = hello_wellsfargo_get_with_http_info(gateway_company_id, request_id, opts)
      data
    end

    # Provides the ability for customers to validate their certificate installation.
    # @param gateway_company_id Required. Channel Id of WF customer that request is on behalf of. Will be used for authorization and billing. Length must be 10
    # @param request_id Required. Identifier of API request message instance, to provide tracking. Length must be between 1 and 36
    # @param [Hash] opts the optional parameters
    # @return [Array<(HelloWellsfargoResponseDEF, Fixnum, Hash)>] HelloWellsfargoResponseDEF data, response status code and response headers
    def hello_wellsfargo_get_with_http_info(gateway_company_id, request_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: UtilitiesApi.hello_wellsfargo_get ...'
      end
      # verify the required parameter 'gateway_company_id' is set
      if @api_client.config.client_side_validation && gateway_company_id.nil?
        fail ArgumentError, "Missing the required parameter 'gateway_company_id' when calling UtilitiesApi.hello_wellsfargo_get"
      end
      if @api_client.config.client_side_validation && gateway_company_id.to_s.length > 10
        fail ArgumentError, 'invalid value for "gateway_company_id" when calling UtilitiesApi.hello_wellsfargo_get, the character length must be smaller than or equal to 10.'
      end

      if @api_client.config.client_side_validation && gateway_company_id.to_s.length < 10
        fail ArgumentError, 'invalid value for "gateway_company_id" when calling UtilitiesApi.hello_wellsfargo_get, the character length must be great than or equal to 10.'
      end

      # verify the required parameter 'request_id' is set
      if @api_client.config.client_side_validation && request_id.nil?
        fail ArgumentError, "Missing the required parameter 'request_id' when calling UtilitiesApi.hello_wellsfargo_get"
      end
      if @api_client.config.client_side_validation && request_id.to_s.length > 36
        fail ArgumentError, 'invalid value for "request_id" when calling UtilitiesApi.hello_wellsfargo_get, the character length must be smaller than or equal to 36.'
      end

      if @api_client.config.client_side_validation && request_id.to_s.length < 1
        fail ArgumentError, 'invalid value for "request_id" when calling UtilitiesApi.hello_wellsfargo_get, the character length must be great than or equal to 1.'
      end

      # resource path
      local_var_path = '/hello-wellsfargo'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'gateway-company-id'] = gateway_company_id
      header_params[:'request-id'] = request_id

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Bearer']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'HelloWellsfargoResponseDEF')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UtilitiesApi#hello_wellsfargo_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
